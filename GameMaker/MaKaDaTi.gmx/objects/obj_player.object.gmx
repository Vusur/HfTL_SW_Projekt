<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-400</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize player 
img_speed = 0.2;
image_speed = img_speed;

// player variable
hsp = 0;
vsp = 0;

jumpspeed = 13;
grav = 0.5;
movespeed = 6;
oldvsp = 0;

dir = image_xscale;
timer = true;

var_isrunning = 0;

// can player hit and move or has he get a hit by pumpkin??
moveable = false;
hitable = false;
ishitted = false;

hsp_plat = 0;
vsp_plat = 0;

// the player has to stand still at the begining
alarm[0] = room_speed;

//create fade
instance_create(x, y, obj_fade);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Death
//is paused?
if(global.pause){
    image_speed = 0;
    alarm[2] = room_speed;
    exit;
}
if(place_meeting(x, y, obj_spike)) {
    inst = instance_create(x, y, obj_player_dead)
    with(inst){
    image_angle = obj_player.image_angle;
    }
}
// Highscore
var_highscore_resets+=1;
if (var_highscore_resets_this_room &lt; var_highscore_max_counted_resets){
    var_highscore_resets_this_room+=1;
}
// Punkte für Kills abziehen
var_highscore_kills_this_room=0;
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//is paused?
if(global.pause){
    image_speed = 0;
    audio_stop_sound(running001);
    exit;
}
timer = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//is paused?
if(global.pause){
    image_speed = 0;
    audio_stop_sound(running001);
    exit;
}

moveable = true;
hitable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>oldvsp = vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///behavior of the player

//is paused?
if(global.pause){
    image_speed = 0;
    audio_stop_sound(running001);
    exit;
}

scr_getInputs(moveable);



//draw the direction which the player faces
if((key_right - key_left) != 0) image_xscale = key_right - key_left;
var_player_direction = image_xscale;

//fall
if(vsp &lt; 10) vsp += grav;

//jump
if(place_meeting(x, y+1, obj_stoneWall)){
    if(key_jump) vsp = -jumpspeed;
}

//move
hsp = movespeed * (key_right - key_left);

var hsp_final = hsp + hsp_plat;
var vsp_final = vsp + vsp_plat;
hsp_plat = 0;
vsp_plat = 0;
//###################################
//### collision with solid Blocks ###
//###################################

//vertical
if(place_meeting(x, y+vsp_final, obj_stoneWall)){
    while(!place_meeting(x, y+sign(vsp_final), obj_stoneWall)){
        y += sign(vsp_final);
    }
    vsp_final = 0; 
    vsp = 0;  
}

//horizontal
if(place_meeting(x+hsp_final, y, obj_stoneWall)){
    while(!place_meeting(x+sign(hsp_final), y, obj_stoneWall)){
        x += sign(hsp_final);
    }
    
    hsp_final = 0;
    hsp = 0;
}

//###############################################
//### the player open the door and can't move ###
//###############################################
if(place_meeting(x, y, obj_door) &amp;&amp; key_up){
    if(obj_door.open){
        moveable = false;
        obj_fade.fade_out = true;
        obj_door.alarm[0] = room_speed*2;
        audio_play_sound(snd_door_short, 10, false);
        //dont move!
        hsp_final = 0;
        hsp = 0;
        vsp = 0;
        vsp_final = 0;
    }
}


//##############
//### Sounds ###
//##############

//play running sound
if (hsp != 0 &amp;&amp; var_isrunning == 0){
    var_isrunning = 1;
    audio_play_sound(running001, 10, true);
}

if (hsp == 0 &amp;&amp; var_isrunning == 1){
    audio_stop_sound(running001);
    var_isrunning = 0;
}

//stop playing sound when jumping
if (vsp != 0){
    audio_stop_sound(running001);
    var_isrunning = 0;
}

//########################
//### Player Animation ###
//########################

if(place_meeting(x, y+1, obj_stoneWall)){   //Der Spieler steht auf dem Boden
    image_speed = img_speed;
    if(place_meeting(x + (key_right - key_left), y, obj_stoneWall)){ //Wir "drücken" gegen eine Wand
        image_speed = 0;
        sprite_index = spr_player_push;
        if(place_meeting(x + 3*(key_right - key_left), y, obj_bookShelf)){  //bewege den Spieler langsam
            image_speed = 0.05;
        }        
    } else if(hsp == 0){    //der Spieler steht still
         sprite_index = spr_player_idle;
    } else {    //der Spieler bewegt sich normal
        sprite_index = spr_player_run;
    }
 
} else  {
    //animation for jumping and falling;
    sprite_index = spr_player_jump;
    if(vsp &lt; 0){
        image_index = 0;
    } else{
        image_index = 1;
    }
}

//#######################
//### Throw the stone ###
//#######################
if(key_throw &amp;&amp; timer){
    dir = image_xscale;
    instance_create(x, y, obj_stone_colored);
    audio_play_sound(stone_throw001, 5,  false);
    timer = false;
    alarm[1] = room_speed/3;
}

//compute new position and draw

    x += hsp_final;
    y += vsp_final;


//#############
//### DEBUG ###
//#############
scr_debug();

    



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//is paused?
if(global.pause){
    image_speed = 0;
    audio_stop_sound(running001);
    exit;
}
if(!ishitted){
    alarm[2] = room_speed;
    ishitted = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
