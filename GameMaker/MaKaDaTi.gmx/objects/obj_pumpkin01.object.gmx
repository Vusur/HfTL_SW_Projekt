<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pumpkin01_left</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-400</depth>
  <persistent>0</persistent>
  <parentName>obj_pumpkin</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize Variables
event_inherited();
dir = choose(-1, 1);
movespeed = 3;
grav = 0.2;
hsp = 0; // horizontal speed
vsp = 0; // vertical speed


hasRotation = choose(0, 1);
if(hasRotation == 0){
    image_xscale = dir;
    image_speed = 0.4;
    sprite_index = spr_pumpkin01_waiting
} else {
    sprite_index = spr_pumpkin01_left;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/// Movement

hsp = dir * movespeed;
vsp += grav;

//##################################################
//### collision with solid Blocks (only if solid)###
//##################################################


//vertical over solid
if(place_meeting(x, y+vsp, obj_stoneWall)){
    while(!place_meeting(x, y+sign(vsp), obj_stoneWall)){
        y += sign(vsp);
    }
    vsp = 0;   
}
   
//vertical over shelf
else if(place_meeting(x, y+vsp, obj_shelf_pumpkin)){
    while(!place_meeting(x, y+sign(vsp), obj_shelf_pumpkin)){
        y += sign(vsp);
    }
    vsp = 0;
}

//horizontal only if solid block
if(!place_meeting(x+hsp, y, obj_oneWay)){
//horizontal
    if(place_meeting(x+hsp, y, obj_stoneWall)){
        while(!place_meeting(x+sign(hsp), y, obj_stoneWall)){
            x += sign(hsp);
        }
        hsp = 0;
        dir *= -1;
    }
}


//compute new position
x += hsp;
y += vsp;



//####################################
//### Bewegungsmuster der Kürbisse ###
//####################################

///zeichnet die Bewegung des Kürbisses
if(hsp != 0){
    if(hasRotation == 1){
        if(sign(hsp) == 1) image_speed = -0.4;
        else image_speed = 0.4;
    } else {
        if(sign(hsp) == 1)  image_xscale = -1;
        else    image_xscale = 1;   
    }
} else {
    spr_index = spr_pumpkin01_waiting;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
