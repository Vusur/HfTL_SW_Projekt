<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_highlight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>entry = 0; //entry for the menu
subentry = 0; //entry for submenu
subsubentry = 0; //entry for subsubmenu

image_speed = 0;
//alpha = 0.7;

startRoom = rm_001theBegin;

selected = false; //toggle entry for the menu and call submenu
subselected = false; //toogle subentry for subsubentry


save[0] = "__genSave1.sav" //Save Name 1
save[1] = "__genSave2.sav" //Save Name 2
save[2] = "__genSave3.sav" //Save Name 3

tempControls = 0;
tempSounds = 0;
tempBrightness = 0;
tempFullscreen = 0;
tempFrames = 0;


instance_create(x, y, obj_gameInit);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_getInputs(true)


if(!selected){
    //choose entry
    if(key_down &amp;&amp; entry  &lt; 4){
        entry += 1;
    } else if (key_up &amp;&amp; entry &gt; 0){
        entry -= 1;
    }
    //draw Highlight
    image_index = entry;
    
    if(key_enter){
        selected = true;
        subselected = false
        subentry = 0;
    }
    
} else {//compute selected
    
    //##################################   
    //### neues Spiel or Spiel laden ###
    //##################################
    if(entry == 0 || entry == 1){
        //local variables
        var maxsubentry = 3 //subentry 0, 1, 2, 3
        var maxsubsubentry; //subsubentry 
        if(entry == 0) maxsubsubentry = 1;  //0, 1
        else maxsubsubentry = 2;            //0, 1, 2
        
        if(key_enter &amp;&amp; !subselected &amp;&amp; subentry == 3){ //chose subentry == 3 -&gt; cancle       
            selected = false;                       
        }       
        else if(key_enter &amp;&amp; !subselected){ //choose savefile with subentry 0, 1, 2
                    

            subselected = true; //toogle submenu for 3rd if statement
            subsubentry = 0;    //set position of Highlight
            
        } else if(key_enter){   //compute subsubentry 0 or 1
            
            if(subsubentry == 2){ //delete save and return
                if(file_exists(save[subentry])) file_delete(save[subentry]);
            } else if (subsubentry == 1){ //cancle subsubentry
                subselected = false;
            } else if(subsubentry == 0){ //start and overwrite or load
                if(entry == 0){ //start and overwrite
                    if(file_exists(save[subentry])) file_delete(save[subentry]);
                    startRoom = rm_001theBegin;
                } else if(entry == 1){ //load if exist, else start new game
                    if(file_exists(save[subentry])){
                       var loadfile = file_text_open_read(save[subentry]);
                       startRoom = file_text_read_real(loadfile);
                       file_text_close(loadfile);                       
                    } else {
                        startRoom = rm_001theBegin;
                    }                  
                }
                global.save = save[subentry];
                room_goto(startRoom);
            }
        }                                                         
    }
    
    //###############
    //### options ###
    //###############
    if(entry == 2){
        var maxsubentry = 5;
        var ende = 0 //HV for save and cancle
        //set option //drawing
        
        if(subentry != 5){ //setting HV evry time when we dont have subentry 5 selected
            ende = 0;
        }
        if(subentry == 0){ //controls          
            if(tempControls == 0 &amp;&amp; key_right_s) tempControls = 1; //controler          
            else if(tempControls == 1 &amp;&amp; key_left_s) tempControls = 0; //keyboard
            
        } else if (subentry == 1){ // sounds
            if(tempSounds == 0 &amp;&amp; key_right_s) tempSounds = 1; //on          
            else if(tempSounds == 1 &amp;&amp; key_left_s) tempSounds = 0; //off

        } else if (subentry == 2){ // fullscreen
            if(tempFullscreen == 0 &amp;&amp; key_right_s) tempFullscreen = 1; //on          
            else if(tempFullscreen == 1 &amp;&amp; key_left_s) tempFullscreen = 0; //off

        } else if (subentry == 3){ // brightness
            
            // 0 == hell; 1 == normal; 2 == dunkel; 3 == debug (sehr hell)
            if(tempBrightness &lt; 3 &amp;&amp; key_right_s) tempBrightness += 1;            
            if(tempBrightness &gt; 0 &amp;&amp; key_left_s) tempBrightness -= 1;
 
        } else if (subentry == 4){ // frames
             if(tempFrames == 0 &amp;&amp; key_right_s) tempFrames = 1; //on          
             else if(tempFrames == 1 &amp;&amp; key_left_s) tempFrames = 0; //off
             
        } else if (subentry == 5){ //save or cancle
             
             if(key_right_s)     ende = 1; //dont save
             else if(key_left_s) ende = 0; //save
//              if(!subselect &amp;&amp; key_enter){
//                  subselect = true;
//                  maxsubsubentry = 1 //0, 1
//               } else if(key_enter) {
//                  if(subsubentry == 0){
//                      selected = false;
//                  } else if(subsubentry == 1){
                    
//                  }
        }        
    }
    
    //credits
    if(entry == 3){
    
    }
    
    //spiel beenden
    if(entry == 4){
        if(!subselected) subselected = true; // toggle subsubmenu
        var maxsubsubentry = 1;
        if(subsubentry == 1 &amp;&amp; key_enter) game_end();   //close game
        else if(key_enter) selected = false;           //cancle action
    }
    
    //choose entry from submenu
    if(!subselected){
        if(key_down &amp;&amp; subentry  &lt; maxsubentry){
            subentry += 1;
        } else if (key_up &amp;&amp; subentry &gt; 0){
            subentry -= 1;
        }
    } else{ //choose entry from subsubmenu
        if(keyboard_check_pressed(vk_right) &amp;&amp; (subsubentry &lt; maxsubsubentry)){
            subsubentry += 1;
        } else if (keyboard_check_pressed(vk_left) &amp;&amp; (subsubentry &gt; 0)){
            subsubentry -= 1;
        }

    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//create persistent Objects
instance_create(x, y, obj_pause);
instance_create(x, y, obj_light_control);
instance_create(x, y, obj_bgmusic001);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initialisiert persistente Objekte

//delete all persistent Objects
if(instance_exists(obj_pause)) {with(obj_pause) {instance_destroy()};}
if(instance_exists(obj_light_control)) {with(obj_light_control) {instance_destroy()};}
if(instance_exists(obj_bgmusic001)) {with(obj_bgmusic001) {instance_destroy()};}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw Highlight
draw_sprite(spr_menu_highlight, entry, x, y);

///draw the selection
if(selected){ //begin submenu
    // erzeuge, dass der Bildschirm abdunkelt
    draw_set_colour(c_black)
    draw_set_alpha(0.7);
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], false);
    
    //set font style to center
    draw_set_halign(fa_center);

    
    //##################################
    //### neues Spiel or Spiel laden ###
    //##################################
    if(entry == 0 || entry == 1){
        
        //set new fontstyle
        draw_set_font(fn_header);
            
        //draw header
        var head ="";
        if(entry == 0) head = "Neues Spiel starten";
        else head = "Ein Spiel laden";
        draw_text_colour(((view_xview[0] + view_wview[0]) / 2),  (view_yview[0] + 100) , head, c_red, c_red, c_orange, c_orange, 0.7);
        
        
        // draw submenu for both
        if(!subselected){         
            
            //set new font style
            draw_set_font(fn_pause);
            draw_set_colour(c_white);
            draw_set_alpha(0.5);
            
            //draw subentrys
            var pos; //hilfsvariable
            var text
            for(pos = 0; pos &lt; 4; pos ++){
                if(pos == 3){
                    text = "Abbrechen"
                } else if(file_exists(save[pos])){  
                    text = "weiter";  //platzhalter
                }  else {
                    text = "Neues Spiel"
                }
                var xbegin = (view_xview[0] + view_wview[0]) / 2;  //center of the view x
                var ybegin = (view_yview[0] + ((2+pos)*100))       //center of the view y
                draw_text(xbegin,  ybegin, text);
                if(pos == subentry){
                    draw_rectangle(xbegin-200, ybegin-5, xbegin+200, ybegin+45, true);
                }
            }
            
        
        } else{ //draw sububmenu for entry 0 or 1 (spiel starten oder laden)
            //set font style
            draw_set_font(fn_pause);
            draw_set_colour(c_white);
            draw_set_alpha(0.5);         
            var xbegin = (view_xview[0] + view_wview[0]) / 2;  //center of the view x
            var ybegin = (view_yview[0] + 200);                //center of the view y
            var text = "Neues Spiel";
            if(file_exists(save[subentry])) text = "Weiter +-+";
            draw_text(xbegin, ybegin, text);
            if(entry == 0){ //draw subsub starten
                draw_text(xbegin - 125, ybegin + 100, " Starten ");
                draw_text(xbegin + 150, ybegin + 100, "Abbrechen");
            
                ybegin += 95 
                if(subsubentry == 0) xbegin -= 225;
                else xbegin += 50;
                draw_rectangle(xbegin, ybegin, xbegin + 200, ybegin + 45, true);
                
            } else if (entry == 1){ //draw subsubmenu laden
                draw_text(xbegin - 225, ybegin + 100, " Starten ");
                draw_text(xbegin + 0  , ybegin + 100, "Abbrechen");
                draw_text(xbegin + 225, ybegin + 100, " Löschen ");
                
                ybegin += 95 
                if(subsubentry == 0) xbegin -= 325;
                else if (subsubentry == 1) xbegin -= 100;
                else xbegin += 125;
                draw_rectangle(xbegin, ybegin, xbegin + 200, ybegin + 45, true);                               
            }
            
            //draw information
            var info ="";
            if(subsubentry == 0 &amp;&amp; text !=  "Neues Spiel"){
                if(entry == 1) info = "Das Spiel wird geladen";
                else info = "Der alte Spielstand wird überschrieben";
            }else if(subsubentry == 0) {
                if(entry == 1) info = "Ein neues Spiel starten";
                else info = "Beginne ein neues Spiel";
            } else if (subsubentry == 1){
                info = "Zurück zur Auswahl";
            } else {
                if(text == "Neues Spiel") info = "Kein Spielstand zum löschen vorhanden";
                else info = "Der Spielstand wird unwiderruflich gelöscht";
            }
            draw_text((view_xview[0] + view_wview[0]) / 2, (view_yview[0] + 400), info);
        }
    }
    
    //################
    //### optionen ###
    //################
    
    if(entry == 2){
        //set new fontstyle
        draw_set_font(fn_header);
            
        //draw header
        var head = "Einstellungen"
        var xbegin = (view_xview[0] + view_wview[0]) / 2;  //center of the view x
        var ybegin = view_yview[0] + 100;      //center of the view y
        draw_text_colour(xbegin,  ybegin , head, c_red, c_red, c_orange, c_orange, 0.7);
        
        //set new fontstyle
        draw_set_font(fn_pause);
        draw_set_alpha(0.7);
        draw_set_colour(c_white);
        draw_set_halign(fa_right);
        xbegin -= 25;
        ybegin += 100;
        
        //Draw entrys
        draw_text(xbegin, ybegin, "Steuerung:")        
        draw_text(xbegin, ybegin+100, "Sound:")       
        draw_text(xbegin, ybegin+200, "Vollbild:")
        draw_text(xbegin, ybegin+300, "Helligkeit:")    
        draw_text(xbegin, ybegin+400, "FPS Anzeige:")
        
        draw_set_halign(fa_right);
        draw_text(xbegin, ybegin+500, "Übernehmen");
        draw_set_halign(fa_left);
        draw_text(xbegin+50, ybegin+500, "Abbrechen");
        
        //set new fontstyle
        draw_set_halign(fa_left);
        draw_set_alpha(0.5);
        xbegin += 50;
        var text = ""
        
        //controls
        if(tempControls == 0)       text = "Tastatur";
        else if (tempControls == 1) text = "GamePad";
        draw_text(xbegin, ybegin, text);
        
        //sounds
        if(tempSounds == 0)         text = "Eingeschaltet";
        else if (tempSounds == 1)   text = "Ausgeschaltet";
        draw_text(xbegin, ybegin + 100, text);
        
        //fullscreen
        if(tempFullscreen == 0)       text = "Eingeschaltet";
        else if (tempFullscreen == 1) text = "Ausgeschaltet";
        draw_text(xbegin, ybegin+200, text);
        
        //brightness
        if(tempBrightness == 0)       text = "Hell";
        else if (tempBrightness == 1) text = "Normal";
        else if (tempBrightness == 2) text = "Dunkel";
        else if (tempBrightness == 3) text = "Debug";
        draw_text(xbegin, ybegin+300, text);
        
        //frames
        if(tempFrames == 0)         text = "Eingeschaltet";
        else if (tempFrames == 1)   text = "Ausgeschaltet";
        draw_text(xbegin, ybegin+400, text);

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    //credits
    
    //###############
    //### Beenden ###
    //###############
    if(entry == 4){
        //set new fontstyle
        draw_set_font(fn_header);
            
        //draw header
        var head = "Spiel beenden";
        var xbegin = (view_xview[0] + view_wview[0]) / 2;  //center of the view x
        var ybegin = (view_yview[0] + 100);                //center of the view y            
        draw_text_colour(xbegin,  ybegin , head, c_red, c_red, c_orange, c_orange, 0.7);
        
        //set new fontstyle
        draw_set_font(fn_pause);
        draw_set_colour(c_white);
        draw_set_alpha(0.5);
        
        draw_text(xbegin, ybegin + 100, "Willst du endlich aufwachen?");       
        draw_text(xbegin-100, ybegin + 200, "Nein");
        draw_text(xbegin+100, ybegin + 200, "Ja");
        
        ybegin += 195;
        if(subsubentry == 0){
            xbegin -= 150;
        } else{
            xbegin += 50;
        }
        draw_rectangle(xbegin, ybegin, xbegin + 100, ybegin + 45, true);       
    }
}

//set back to default
draw_set_alpha(1);
draw_set_colour(c_white);
draw_set_font(-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
