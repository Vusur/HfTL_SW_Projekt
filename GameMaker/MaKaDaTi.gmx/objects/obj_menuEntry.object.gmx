<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_highlight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>entry = 0; //entry for the menu
subentry = 0; //entry for submenu
subsubentry = 0; //entry for subsubmenu

image_speed = 0;
//alpha = 0.7;

rm = rm_001_Der_Anfang__TB;
date = "--"

rmCompute = false;
nr = "";
name = ""

selected = false; //toggle entry for the menu and call submenu
subselected = false; //toogle subentry for subsubentry
ende = 0;
active[0] = false; //left
active[1] = false; //right

tempControls = 0;
tempSounds = 0;
tempBrightness = 0;
tempFullscreen = 0;
tempFrames = 0;
tempRes = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active[1] = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active[0] = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.logon == 0) exit;

scr_getInputs(true)


if(!selected){
    //choose entry
    if(key_down &amp;&amp; entry  &lt; 4){
        entry += 1;
    } else if (key_up &amp;&amp; entry &gt; 0){
        entry -= 1;
    }
    //draw Highlight
    image_index = entry;
    
    if(key_enter){
        selected = true;
        subselected = false
        subentry = 0;
        subsubentry = 0;
        scr_loadini();
        tempBrightness = global.brightness;
    }
    
} else {//compute selected
    
    //##################################   
    //### neues Spiel or Spiel laden ###
    //##################################
    if(entry == 0 || entry == 1){
        //local variables
        var maxsubentry = 3 //subentry 0, 1, 2, 3
        var maxsubsubentry; //subsubentry 
        if(entry == 0) maxsubsubentry = 1;  //0, 1
        else maxsubsubentry = 2;            //0, 1, 2
        
        if(key_enter &amp;&amp; !subselected &amp;&amp; subentry == 3){ //chose subentry == 3 -&gt; cancle       
            selected = false;                       
        }       
        else if(key_enter &amp;&amp; !subselected){ //choose savefile with subentry 0, 1, 2
                    
            subselected = true; //toogle submenu for 3rd if statement
            subsubentry = 0;    //set position of Highlight
            
        } else if(key_enter){   //compute subsubentry 0 or 1
            
            if(subsubentry == 2){ //delete save and return
                scr_save(subentry, -1);
                
            } else if (subsubentry == 1){ //cancle subsubentry
                subselected = false;
                
            } else if(subsubentry == 0){ //start and overwrite or load
                if(entry == 0){ //start and overwrite
                    //scr_load(subentry)
                    
                    rm=(rm_001_Der_Anfang__TB)
                    
                } else if(entry == 1){ //load if exist, else start new game
                    scr_load(subentry)
                    if(rm == -1){
                        rm = rm_001_Der_Anfang__TB;
                    }
                }
                global.save = subentry;
                room_goto(rm);
            }
        }                                                         
    }
    
    //###############
    //### options ###
    //###############
    if(entry == 2){
        var maxsubentry = 6;
        //set option //drawing
        
        
        if (subentry == 0){
            // 0 == 768*1024;   1 == 800x600
            // 2 == 1024x768;   3 == 1280x720;   
            // 3 == 1280x800    5 == 1280x1024
            // 6 == 1366x768;   7 == 1440x900
            // 8 == 1600x900;   9 == 1920x1080
            if(tempRes &lt; 9 &amp;&amp; key_right_s) tempRes += 1;            
            if(tempRes &gt; 0 &amp;&amp; key_left_s) tempRes -= 1;
            
        } else if (subentry == 1){ // fullscreen
            if(tempFullscreen == 0 &amp;&amp; key_right_s) tempFullscreen = 1; //on          
            else if(tempFullscreen == 1 &amp;&amp; key_left_s) tempFullscreen = 0; //off
        
        } else if(subentry == 2){ //controls          
            if(tempControls == 0 &amp;&amp; key_right_s) tempControls = 1; //controler          
            else if(tempControls == 1 &amp;&amp; key_left_s) tempControls = 0; //keyboard
            
        } else if (subentry == 3){ // sounds
            if(tempSounds == 0 &amp;&amp; key_right_s) tempSounds = 1; //on          
            else if(tempSounds == 1 &amp;&amp; key_left_s) tempSounds = 0; //off
            
        } else if (subentry == 4){ // brightness           
            
            if(global.brightness &lt; 1 &amp;&amp; key_right_s) global.brightness += 0.1;          
            if(global.brightness &gt; -1 &amp;&amp; key_left_s) global.brightness -= 0.1;
 
        } else if (subentry == 5){ // frames
             if(tempFrames == 0 &amp;&amp; key_right_s) tempFrames = 1; //on          
             else if(tempFrames == 1 &amp;&amp; key_left_s) tempFrames = 0; //off
             
        } else if (subentry == 6){ //save or cancle
             
             if(key_right_s)     ende = 1; //dont save
             else if(key_left_s) ende = 0; //save
             
             if(key_enter &amp;&amp; ende == 1){
                selected = false;
                global.brightness = tempBrightness
             } else if(key_enter &amp;&amp; ende == 0){
                scr_gameIni(tempControls, tempSounds, tempFullscreen, global.brightness, tempFrames, tempRes);
                selected = false;
                //need for resolution
                room_goto(rm__0__init_Dont_Touch);
             }
        }        
    }
    
    //credits
    if(entry == 3){
    
    }
    
    //spiel beenden
    if(entry == 4){
        if(!subselected) subselected = true; // toggle subsubmenu
        var maxsubsubentry = 1;
        if(subsubentry == 1 &amp;&amp; key_enter) game_end();   //close game
        else if(key_enter) selected = false;           //cancle action
    }
    
    //choose entry from submenu
    if(!subselected){
        if(key_down &amp;&amp; subentry  &lt; maxsubentry){
            subentry += 1;
        } else if (key_up &amp;&amp; subentry &gt; 0){
            subentry -= 1;
        }
    } else{ //choose entry from subsubmenu
        if(key_right_s &amp;&amp; (subsubentry &lt; maxsubsubentry)){
            subsubentry += 1;
        } else if (key_left_s &amp;&amp; (subsubentry &gt; 0)){
            subsubentry -= 1;
        }

    }
}

if(key_esc &amp;&amp; subselected){ 
    subselected = false;
    global.brightness = tempBrightness
} else if(key_esc &amp;&amp; selected){ 
    selected = false;
    global.brightness = tempBrightness
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//create persistent Objects
instance_create(x, y, obj_pause);
instance_create(x, y, obj_bgmusic001);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initialisiert persistente Objekte

//delete all persistent Objects
if(instance_exists(obj_pause)) {with(obj_pause) {instance_destroy()};}
if(instance_exists(obj_light_control)) {with(obj_light_control) {instance_destroy()};}
if(instance_exists(obj_bgmusic001)) {with(obj_bgmusic001) {instance_destroy()};}

instance_create(x, y, obj_light_control);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw Highlight
draw_sprite(spr_menu_highlight, entry, x, y);

///draw the selection
if(selected){ //begin submenu
    
    //set font style to center
    draw_set_halign(fa_center);
    
    //create menu base
    scr_base();
           
    //##################################
    //### neues Spiel or Spiel laden ###
    //##################################
    if(entry == 0 || entry == 1){        
        //draw entrys
        scr_load_start(entry);       
    }
    
    //################
    //### optionen ###
    //################
    
    if(entry == 2){
        var info ="";
        //set new fontstyle
        draw_set_font(fn_header);
            
        //draw header      
        draw_text_colour(((view_xview[0] + view_wview[0]) / 2),  (view_yview[0] + 125) , "Einstellungen", c_black, c_black, c_red, c_red, 0.75);
        
        //set new fontstyle
        draw_set_font(fn_pause);
        draw_set_alpha(0.7);
        draw_set_colour(c_black);
        draw_set_halign(fa_right);
        

        var xbegin = ((view_xview[0] + view_wview[0]) / 2) -75;  //center of the view x
        var ybegin = view_yview[0] + 225;      //center of the view y
        
        //Draw entrys
        draw_text(xbegin, ybegin, "Auflösung:")
        draw_text(xbegin, ybegin+50, "Vollbild:")
        draw_text(xbegin, ybegin+100, "Steuerung:")        
        draw_text(xbegin, ybegin+150, "Sound:")             
        draw_text(xbegin, ybegin+200, "Helligkeit:")    
        draw_text(xbegin, ybegin+250, "FPS Anzeige:")
        
        draw_set_halign(fa_left);
        draw_text(450, 575, "Übernehmen");
        draw_text(725, 575, "Abbrechen");
        draw_set_halign(fa_center);
        
        //set new fontstyle
        draw_set_halign(fa_left);
        draw_set_alpha(0.5);
        xbegin += 50;
        var text = ""
        
        //resolution
        if(tempRes == 0)       text = "768x1024";
        else if (tempRes == 1) text = "800x600";
        else if (tempRes == 2) text = "1024x768";
        else if (tempRes == 3) text = "1280x720";
        else if (tempRes == 4) text = "1280x800";
        else if (tempRes == 5) text = "1280x1024";
        else if (tempRes == 6) text = "1366x768";
        else if (tempRes == 7) text = "1440x900";
        else if (tempRes == 8) text = "1600x900";
        else if (tempRes == 9) text = "1920x1080";
        draw_text(xbegin, ybegin, text);
        if(subentry == 0){
            info = "16:9 Auflösung empfohlen"
            scr_informationText(info);
            draw_set_halign(fa_left);
            draw_set_alpha(0.5);    
        }
        
        //fullscreen
        if(tempFullscreen == 0)       text = "Eingeschaltet";
        else if (tempFullscreen == 1) text = "Ausgeschaltet";
        draw_text(xbegin, ybegin + 50, text);
        
        //controls
        if(tempControls == 0)       text = "Tastatur";
        else if (tempControls == 1) text = "GamePad";
        draw_text(xbegin, ybegin + 100, text);
        if(subentry == 2){
            if(!gamepad_is_connected(0)){
                info = "Kein GamePad angeschlossen"
                scr_informationText(info);
                draw_set_halign(fa_left);
                draw_set_alpha(0.5);
            }
        }
        
        //sounds
        if(tempSounds == 0)         text = "Eingeschaltet";
        else if (tempSounds == 1)   text = "Ausgeschaltet";
        draw_text(xbegin, ybegin + 150, text);
        
        //brightness
        text = "";
        if(global.brightness &gt; 0) text = "+"
        text += string(round(global.brightness * 100)) + "%"
        
        if(global.brightness == 0) text = "normal"
        draw_text(xbegin, ybegin + 200, text);
        
        //frames
        if(tempFrames == 0)         text = "Eingeschaltet";
        else if (tempFrames == 1)   text = "Ausgeschaltet";
        draw_text(xbegin, ybegin+250, text);
        
        //draw Highlight and info
        if(subentry == 0){ 
            draw_sprite(spr_indicator, 0, xbegin-243, ybegin+16);
            scr_indicator(0, tempRes, 9, xbegin, ybegin); //draw OptionsIndicator
                       
        }else if(subentry == 1){ 
            draw_sprite(spr_indicator, 0, xbegin-207, ybegin+16+50);
            scr_indicator(0, tempFullscreen, 1, xbegin, ybegin+50); //draw OptionsIndicator
            
        }else if(subentry == 2){ 
            draw_sprite(spr_indicator, 0, xbegin-243, ybegin+16+100);
            scr_indicator(0, tempControls, 1, xbegin, ybegin+100); //draw OptionsIndicator
            
        }else if(subentry == 3){ 
            draw_sprite(spr_indicator, 0, xbegin-157, ybegin+16+150);
            scr_indicator(0, tempSounds, 1, xbegin, ybegin+150); //draw OptionsIndicator
            
        }else if(subentry == 4){ 
            draw_sprite(spr_indicator, 0, xbegin-243, ybegin+16+200);
            scr_indicator(-1, global.brightness, 1, xbegin, ybegin+200); //draw OptionsIndicator
            
        }else if(subentry == 5){ 
            draw_sprite(spr_indicator, 0, xbegin-262, ybegin+16+250);
            scr_indicator(0, tempFrames, 1, xbegin, ybegin+250); //draw OptionsIndicator
            
        }else if(subentry == 6){
            if(ende==0){     
                draw_sprite(spr_indicator, 0, 425, 575+16);
                info = "Einstellungen übernehmen"
            }else if(ende==1){
                draw_sprite(spr_indicator, 0, 700, 575+16);
                info = "Zurück zum Hauptmenü"
            }
            scr_informationText(info);
        }

    }
    
      
    
    //credits
    if(entry == 3){
        //set new fontstyle
        draw_set_font(fn_pause);
        draw_set_alpha(0.7);
        draw_set_colour(c_black);
        draw_set_halign(fa_center);
        

        var xbegin = ((view_xview[0] + view_wview[0]) / 2);  //center of the view x
        var ybegin = ((view_yview[0] + view_hview[0]) / 2) - 100; //center of the view y
        
        //Draw menu
        draw_text(xbegin, ybegin-120, "Copyright by Tino Blau, Maria Kömmpel,");  
        draw_text(xbegin, ybegin -60, "Dan Schieck, Katharina Wiegel, Juraj Graser");     
        draw_text(xbegin, ybegin, "2015 - 2016");
        draw_text(xbegin, ybegin+60, "Many thanks to the band Sinus");
        draw_text(xbegin, ybegin+120, "for supporting us with background music!");
    }
    //###############
    //### Beenden ###
    //###############
    if(entry == 4){
    
        //set new fontstyle
        draw_set_font(fn_header);
            
        //draw header      
        draw_text_colour(((view_xview[0] + view_wview[0]) / 2),  (view_yview[0] + 125) , "Spiel beenden", c_black, c_black, c_red, c_red, 0.75);
        
        //set new fontstyle
        draw_set_font(fn_pause);
        draw_set_alpha(0.7);
        draw_set_colour(c_black);
        draw_set_halign(fa_center);
        

        var xbegin = ((view_xview[0] + view_wview[0]) / 2);  //center of the view x
        var ybegin = ((view_yview[0] + view_hview[0]) / 2) - 100; //center of the view y
        
        //Draw menu
        draw_text(xbegin, ybegin-60, "Was für ein schlimmer Albtraum!");
        draw_text(xbegin, ybegin, "Willst du endlich aufwachen?");       
        
        draw_set_halign(fa_left);
        draw_text(575, 575, "Nein");
        draw_text(750, 575, "Ja");
        draw_set_halign(fa_center);
        
        //set highlight
        if(subsubentry == 0){
            draw_sprite(spr_indicator, 0, 550, 575+16);
        } else{
            draw_sprite(spr_indicator, 0, 725, 575+16);
        }     
    }
}



//set back to default
draw_set_alpha(1);
draw_set_colour(c_white);
draw_set_font(-1);
draw_set_halign(fa_left)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
